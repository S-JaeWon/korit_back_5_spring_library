Signin
	controller -> service -> service 속 find 메서드로 repositiory 호출 -> db 속 데이터 불러와서 토큰 생성 

spring aop
	https://mvnrepository.com/search?q=spring+boot+aop
-> Spring Boot Starter AOP

@Slf4j 

spring smtp
	https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
-> pom.xml 에서 붙여넣고 버전 지우기 
-> apllication-secret ->   
mail:
    host:
    port: 
    username:
    password:
    protocol: 
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

react query
	npm i react-query

index.js ->

const QueryClient = new QueryClient();

<QueryClientProvider client={QueryClient}>
~~
</QueryClientProvider>


---------------------------------------------------------------------------------------------------------------------------
spring security
	https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security/3.2.3

WebSecurityConfigurerAdapter 상속(extends)

configure(HttpSecurity http) 만 오버라이드

csrf (SSR 일때)

클라이언트(프론트 서버) -> 서버(백 서버) 
-> 포트가 다르므로 CORS 설정 해줘야됨

<SecurityFilterChain>

1)모든 설정이 들어있음 (최상위)
1-b) Static임, ex)b.c.get.d 가 가능 

1-d) 유저 정보가 들어감 자식 요소로 2개의 인터페이스가 있음 
(UserDetails: 일반 로그인, oathUser: 소셜 로그인)

2)로그아웃 요청 확인, 1-d의 정보를 비움 -> 로그아웃

2-a) SSR로 사용됨.(CSR 사용X) ex) 로그아웃 후 로그인 페이지 보내기 or 홈페이지로 보내기 

JWT-> 2와 3사이에 끼어넣어줌 -> 요청 들어올시 JWT 확인(토큰 확인), 3-b에 포함 됨

3) username, password 체크 (아이디, 비번 인증하는 곳)

3-b) 1-d 로 데이터 보냄 

6) 자동로그인 (아이디, 비번 기억함) (SSR에서 사용)

8) 1-d에 정보가 없으면 익명이 뜸

9) 로그인한 정보 기억함

10) 필터 내에서의 모든 예외처리 ex)아이디, 비번 틀리면 문구 출력


https://hello-judy-world.tistory.com/216
---------------------------------------------------------------------------------------------------------------------------

